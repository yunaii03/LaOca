import random


# DADO
def dado(coord):
    tiro =random.randint(1, 6)
    return (tiro)


# MOVIMIENTO P1
def movementpc1(P1, who,tablero1):
    # 0    º         0     1     2    3      4    5    6    7
    tablero = {7: ["21", "20", "19", "18", "17", "16", "15", "14"],
               6: ["22", "43", "42", "41", "40", "39", "38", "13"],
               5: ["23", "44", "57", "56", "55", "54", "37", "12"],
               4: ["24", "45", "58", "63", "62", "53", "36", "11"],
               3: ["25", "46", "59", "60", "61", "52", "35", "10"],
               2: ["26", "47", "48", "49", "50", "51", "34", "9"],
               1: ["27", "28", "29", "30", "31", "32", "33", "8"],
               0: ["0", "1", "2", "3", "4", "5", "6", "7"]}


    # primero mira filas, luego columnas
    dicci = {0: [0, 0],
             1: [0, 1],
             2: [0, 2],
             3: [0, 3],
             4: [0, 4],
             5: [0, 5],
             6: [0, 6],
             7: [0, 7],
             8: [1, 7],
             9: [2, 7],
             10: [3, 7],
             11: [4, 7],
             12: [5, 7],
             13: [6, 7],
             14: [7, 7],
             15: [7, 6],
             16: [7, 5],
             17: [7, 4],
             18: [7, 3],
             19: [7, 2],
             20: [7, 1],
             21: [7, 0],
             22: [6, 0],
             23: [5, 0],
             24: [4, 0],
             25: [3, 0],
             26: [2, 0],
             27: [1, 0],
             28: [1, 1],
             29: [1, 2],
             30: [1, 3],
             31: [1, 4],
             32: [1, 5],
             33: [1, 6],
             34: [2, 6],
             35: [3, 6],
             36: [4, 6],
             37: [5, 6],
             38: [6, 6],
             39: [6, 5],
             40: [6, 4],
             41: [6, 3],
             42: [6, 2],
             43: [6, 1],
             44: [5, 1],
             45: [4, 1],
             46: [3, 1],
             47: [2, 1],
             48: [2, 2],
             49: [2, 3],
             50: [2, 4],
             51: [2, 5],
             52: [3, 5],
             53: [4, 5],
             54: [5, 5],
             55: [5, 4],
             56: [5, 3],
             57: [5, 2],
             58: [4, 2],
             59: [3, 2],
             60: [3, 2],
             61: [3, 2],
             62: [4, 4],
             63: [4, 3],
             }
    if P1 >= 63:
        activador = "activado"
        P1 = win(who)

    elif P1<63:
        var_posicion = dicci[P1] #3
        x = var_posicion[0]
        y = var_posicion[1]
        tablero1[x][y] = 'P1'

        for z in tablero1:
            for m in tablero1[z]:
                print(m, end=" ")
            print()
        print()
        return (P1, who, tablero1)


# MOVEMENTALEXA
def movementalexa(alexa, who,tablero1):
    # {0:["21", "20", "19", "18", "17", "16", "15", "14"],
    #:["22", "43", "42", "41", "40", "39", "38", "13"],
    #:["23", "44", "57", "56", "55", "54", "37", "12"],
    #:["24", "45", "58", "63", "62", "53", "36", "11"],
    #:["25", "46", "59", "60", "61", "52", "35", "10"],
    #:["26", "47", "48", "49", "50", "51", "34", "9"],
    #:["27", "28", "29", "30", "31", "32", "33", "8"],
    #:["0", "_1", "_2", "_3", "_4", "_5", "_6", "_7"]}

    # 0    1    2    3
    # primero mira filas, luego columnas
    tablero1 = {7: ["_", "_", "P", "O", "_", "_", "_", "O"],
                6: ["_", "_", "L", "O", "_", "_", "_", "_"],
                5: ["O", "_", "_", "_", "_", "O", "_", "P"],
                4: ["_", "O", "M", "*", "_", "D", "O", "_"],
                3: ["_", "_", "O", "_", "_", "_", "_", "_"],
                2: ["D", "_", "_", "_", "O", "_", "_", "O"],
                1: ["O", "_", "_", "_", "P", "O", "_", "_"],
                0: ["0", "_", "_", "_", "_", "O", "P", "_"]}
    dicci = {0: [0, 0],
             1: [0, 1],
             2: [0, 2],
             3: [0, 3],
             4: [0, 4],
             5: [0, 5],
             6: [0, 6],
             7: [0, 7],
             8: [1, 7],
             9: [2, 7],
             10: [3, 7],
             11: [4, 7],
             12: [5, 7],
             13: [6, 7],
             14: [7, 7],
             15: [7, 6],
             16: [7, 5],
             17: [7, 4],
             18: [7, 3],
             19: [7, 2],
             20: [7, 1],
             21: [7, 0],
             22: [6, 0],
             23: [5, 0],
             24: [4, 0],
             25: [3, 0],
             26: [2, 0],
             27: [1, 0],
             28: [1, 1],
             29: [1, 2],
             30: [1, 3],
             31: [1, 4],
             32: [1, 5],
             33: [1, 6],
             34: [2, 6],
             35: [3, 6],
             36: [4, 6],
             37: [5, 6],
             38: [6, 6],
             39: [6, 5],
             40: [6, 4],
             41: [6, 3],
             42: [6, 2],
             43: [6, 1],
             44: [5, 1],
             45: [4, 1],
             46: [3, 1],
             47: [2, 1],
             48: [2, 2],
             49: [2, 3],
             50: [2, 4],
             51: [2, 5],
             52: [3, 5],
             53: [4, 5],
             54: [5, 5],
             55: [5, 4],
             56: [5, 3],
             57: [5, 2],
             58: [4, 2],
             59: [3, 2],
             60: [3, 2],
             61: [3, 2],
             62: [4, 4],
             63: [4, 3],
             }

    if alexa >= 63:
        activador = "activado"
        alexa = win(who)

    elif alexa<63:
        var_posicion = dicci[alexa]
        x = var_posicion[0]
        y = var_posicion[1]
        tablero1[x][y] = 'AL'

        for z in tablero1:
            for m in tablero1[z]:
                print(m, end=" ")
            print()
        print()
        return (alexa, who, tablero1)






def ifs(posicion_j, who, activador,test):
    if posicion_j == 5 or posicion_j == 14 or posicion_j == 23 or posicion_j == 32 or posicion_j == 41 or posicion_j == 50 or posicion_j == 59:
        activador = "activado"
        posicion_f,tablero_actualizado = oca4(posicion_j, who)
        return activador, who, posicion_f,tablero_actualizado


    elif posicion_j == 9 or posicion_j == 18 or posicion_j == 27 or posicion_j == 36 or posicion_j == 45 or posicion_j == 54:
        activador = "activado"
        posicion_f,tablero_actualizado = oca5(posicion_j, who)
        return activador, who, posicion_f,tablero_actualizado

    elif posicion_j == 6:
        activador = "activado"
        posicion_f,tablero_actualizado = puente6(posicion_j, who)
        return activador, who, posicion_f,tablero_actualizado

    elif posicion_j == 12:
        activador = "activado"
        posicion_f,tablero_actualizado = puente12(posicion_j, who)
        return activador, who, posicion_f,tablero_actualizado

    elif posicion_j == 19:
        activador = "activado"
        posicion_f,tablero_actualizado = posada(posicion_j, who)
        return activador, who, posicion_f,tablero_actualizado

    elif posicion_j == 31:
        activador = "activado"
        posicion_f,tablero_actualizado = pozo_bronze(posicion_j, who)
        return activador, who, posicion_f,tablero_actualizado

    elif posicion_j == 26:
        activador = "activado"
        posicion_f,tablero_actualizado = dados26(posicion_j, who)
        return activador, who, posicion_f,tablero_actualizado

    elif posicion_j == 58:
        activador = "activado"
        posicion_f,tablero_actualizado = muerte(posicion_j, who)
        return activador, who, posicion_f,tablero_actualizado

    elif posicion_j == 53:
        activador = "activado"
        posicion_f = dados53(posicion_j, who)
        return activador, who, posicion_f,tablero_actualizado

    elif posicion_j == 42:
        activador = "activado"
        posicion_f,tablero_actualizado = laberinto(posicion_j, who)
        return activador, who, posicion_f,tablero_actualizado

    elif posicion_j == 58:
        activador = "activado"
        posicion_f = calavera(posicion_j, who)
        return activador, who, posicion_f,tablero_actualizado

    elif posicion_j >= 62:
        activador = "activado"
        posicion_f,tablero_actualizado = win(who)
        return activador, who, posicion_f,tablero_actualizado

    else:
        activador="desactivado"
        print("No hay casilla especial")
        return activador, who, posicion_j,test


# POSADA
def posada(posicion_j, who):
    if who == "AL":
        who = "P1"
        print("Alexa se perderá dos turnos. Ya puedes tirar los dados ")
        for x in range(2):
            tiro = dado(posicion_j)
            print("Has sacado un",tiro)
            posicion_j = posicion_j + tiro
            a = 'si'
        tablero_actualizado = mov_especial(posicion_j, who, a)
        if tablero_actualizado == None:
            tablero_actualizado = 'hola'
        elif tablero_actualizado != None:
            print('ok')
        return posicion_j, tablero_actualizado

    elif who == "P1":
        who = "AL"
        print("P1 se perderá dos turnos. Ya puedes tirar los dados ")
        for x in range(2):
            tiro = dado(posicion_j)
            posicion_j = posicion_j + tiro
            print("Has sacado un", tiro)
            a = 'si'

        tablero_actualizado = mov_especial(posicion_j, who, a)
        if tablero_actualizado == None:
            tablero_actualizado = 'hola'
        elif tablero_actualizado != None:
            print('ok')
        return posicion_j, tablero_actualizado


# POZO BRONCE
def pozo_bronze(posicion_j, who):
    if who == "AL":
        who = "P1"
        a = 'si'
        print("Alexa se perderá dos turnos. Ya puedes tirar los dados ")
        for x in range(3):
            tiro = dado(posicion_j)
            posicion_j = posicion_j + tiro
            print("Has sacado un", tiro)
        tablero_actualizado = mov_especial(posicion_j, who, a)
        if tablero_actualizado == None:
            tablero_actualizado = 'hola'
        elif tablero_actualizado != None:
            print('ok')
        return posicion_j, tablero_actualizado

    elif who == "P1":
        who = "AL"
        a = 'si'
        print("P1 se perderá dos turnos. Ya puedes tirar los dados ")
        for x in range(3):
            tiro = dado(posicion_j)
            posicion_j = posicion_j + tiro
            print("Has sacado un", tiro)
        tablero_actualizado = mov_especial(posicion_j, who, a)
        if tablero_actualizado == None:
            tablero_actualizado = 'hola'
        elif tablero_actualizado != None:
            print('ok')
        return posicion_j, tablero_actualizado


def win(who):
    print("Enhorabuena", who, "!!!. Eres el ganador de la partida ")
    exit()


# PUENTE
def puente6(posicion_j, who):
    posicion_j = posicion_j + 6
    a = 'si'
    tablero_actualizado = mov_especial(posicion_j, who, a)
    if tablero_actualizado == None:
        tablero_actualizado = 'hola'
    elif tablero_actualizado != None:
        print('ok')
    return posicion_j, tablero_actualizado
    print(who, "Has caido en un puente, avanzas 6 casillas")

def puente12(posicion_j, who):
    posicion_j = posicion_j + 6
    a = 'si'
    tablero_actualizado = mov_especial(posicion_j, who, a)
    if tablero_actualizado == None:
        tablero_actualizado = 'hola'
    elif tablero_actualizado != None:
        print('ok')
    return posicion_j, tablero_actualizado
    print(who, "Has caido en un puente, avanzas 6 casillas")

# CALAVERA
def calavera(posicion_j, who):
    posicion_j = 0
    a = 'si'
    tablero_actualizado = mov_especial(posicion_j, who, a)
    if tablero_actualizado == None:
        tablero_actualizado = 'hola'
    elif tablero_actualizado != None:
        print('ok')
    return posicion_j, tablero_actualizado
    print(who, 'Has retrocedido hasta la casilla principal y te encuentras en la salida', who)


# DADOS
def dados53(posicion_j, who):
    a = 'si'
    print(who, "Tirarás dos veces y avanzarás la suma de las dos tiradas.")
    z = dado(posicion_j)
    print("has sacado un", z)
    y = dado(posicion_j)
    print("has sacado un", y)
    x = z + y
    posicion_j = posicion_j + x
    print(who, "avanzas", x)

    tablero_actualizado = mov_especial(posicion_j, who, a)
    if tablero_actualizado == None:
        tablero_actualizado = 'hola'
    elif tablero_actualizado != None:
        print('ok')
    return posicion_j, tablero_actualizado


def dados26(posicion_j, who):
    a = 'si'
    print(who, "Tirarás dos veces y avanzarás la suma de las dos tiradas.")
    z = dado(posicion_j)
    print("has sacado un", z)
    y = dado(posicion_j)
    print("has sacado un", y)
    x = z + y
    posicion_j = posicion_j + x
    print(who, "avanzas", x)
    tablero_actualizado = mov_especial(posicion_j, who, a)
    if tablero_actualizado == None:
        tablero_actualizado = 'hola'
    elif tablero_actualizado != None:
        print('ok')
    return posicion_j, tablero_actualizado


# MUERTE

def muerte(posicion_j, who):
    posicion_j = 0
    a = 'si'
    tablero_actualizado = mov_especial(posicion_j, who, a)
    if tablero_actualizado == None:
        tablero_actualizado = 'hola'
    elif tablero_actualizado != None:
        print('ok')
    return posicion_j, tablero_actualizado
    print(who, 'Has retrocedido hasta la casilla principal y te encuentras en la salida', who)


# LABERINTO
def laberinto(posicion_j, who):
    if who == "AL":
        posicion_j = 30
        a = 'si'
        print("Alexa, caido en un laberinto, irás a la casilla 30")
        tablero_actualizado = mov_especial(posicion_j, who, a)
        if tablero_actualizado == None:
            tablero_actualizado = 'hola'
        elif tablero_actualizado != None:
            print('ok')
        return posicion_j, tablero_actualizado

    elif who == "P1":
        posicion_j = 30
        a = 'si'
        print("Jugador 1, has caido en un laberinto, irás a la casilla 30")
        tablero_actualizado = mov_especial(posicion_j, who, a)
        if tablero_actualizado == None:
            tablero_actualizado = 'hola'
        elif tablero_actualizado != None:
            print('ok')
        return posicion_j, tablero_actualizado


# OCA
def oca4(posicion_j, who):
    if posicion_j == 5:
        posicion_j = 14
        print(who, "has caido en una Oca, pasas a la casilla 14")
        a = 'si'
    elif posicion_j == 14:
        posicion_j = 32
        print(who, "has caido en una Oca, pasas a la casilla 32")
        a = 'si'
    elif posicion_j == 32:
        posicion_j = 41
        print(who, "has caido en una Oca, pasas a la casilla 41")
        a = 'si'

    elif posicion_j == 41:
        posicion_j = 50
        print(who, "has caido en una Oca, pasas a la casilla 50")
        a = 'si'
    elif posicion_j == 50:
        posicion_j = 59
        print(who, "has caido en una Oca, pasas a la casilla 59")
        a = 'si'
    tablero_actualizado = mov_especial(posicion_j, who, a)
    if tablero_actualizado == None:
        tablero_actualizado = 'hola'
    elif tablero_actualizado != None:
        print('ok')
    return posicion_j, tablero_actualizado


def oca5(posicion_j, who):
    if posicion_j == 9:
        posicion_j = 14
        print(who, "has caido en una Oca, pasas a la casilla 14")
        a = 'si'

    elif posicion_j == 18:
        posicion_j = 32
        print(who, "has caido en una Oca, pasas a la casilla 32")
        a = 'si'
    elif posicion_j == 27:
        posicion_j = 41
        print(who, "has caido en una Oca, pasas a la casilla 41")
        a = 'si'
    elif posicion_j == 36:
        posicion_j = 50
        print(who, "has caido en una Oca, pasas a la casilla 50")
        a = 'si'
    elif posicion_j == 45:
        posicion_j = 59
        print(who, "has caido en una Oca, pasas a la casilla 59")
        a = 'si'
    elif posicion_j == 54:
        posicion_j = 59
        print(who, "has caido en una Oca, pasas a la casilla 59")
        a = 'si'
    tablero_actualizado = mov_especial(posicion_j, who, a)
    if tablero_actualizado == None:
        tablero_actualizado = 'hola'
    elif tablero_actualizado != None:
        print('ok')
    return posicion_j, tablero_actualizado



def mov_especial(posicion_esp, who,a):
    tablero1 = {7: ["_", "_", "P", "O", "_", "_", "_", "O"],
                6: ["_", "_", "L", "O", "_", "_", "_", "_"],
                5: ["O", "_", "_", "_", "_", "O", "_", "P"],
                4: ["_", "O", "M", "*", "_", "D", "O", "_"],
                3: ["_", "_", "O", "_", "_", "_", "_", "_"],
                2: ["D", "_", "_", "_", "O", "_", "_", "O"],
                1: ["O", "_", "_", "_", "P", "O", "_", "_"],
                0: ["0", "_", "_", "_", "_", "O", "P", "_"]}
    # primero mira filas, luego columnas

    dicci = {0: [0, 0],
             1: [0, 1],
             2: [0, 2],
             3: [0, 3],
             4: [0, 4],
             5: [0, 5],
             6: [0, 6],
             7: [0, 7],
             8: [1, 7],
             9: [2, 7],
             10: [3, 7],
             11: [4, 7],
             12: [5, 7],
             13: [6, 7],
             14: [7, 7],
             15: [7, 6],
             16: [7, 5],
             17: [7, 4],
             18: [7, 3],
             19: [7, 2],
             20: [7, 1],
             21: [7, 0],
             22: [6, 0],
             23: [5, 0],
             24: [4, 0],
             25: [3, 0],
             26: [2, 0],
             27: [1, 0],
             28: [1, 1],
             29: [1, 2],
             30: [1, 3],
             31: [1, 4],
             32: [1, 5],
             33: [1, 6],
             34: [2, 6],
             35: [3, 6],
             36: [4, 6],
             37: [5, 6],
             38: [6, 6],
             39: [6, 5],
             40: [6, 4],
             41: [6, 3],
             42: [6, 2],
             43: [6, 1],
             44: [5, 1],
             45: [4, 1],
             46: [3, 1],
             47: [2, 1],
             48: [2, 2],
             49: [2, 3],
             50: [2, 4],
             51: [2, 5],
             52: [3, 5],
             53: [4, 5],
             54: [5, 5],
             55: [5, 4],
             56: [5, 3],
             57: [5, 2],
             58: [4, 2],
             59: [3, 2],
             60: [3, 2],
             61: [3, 2],
             62: [4, 4],
             63: [4, 3],
             }
    if posicion_esp >= 63:
        activador = "activado"
        P1 = win(who)
    elif    posicion_esp<63:
        var_posicion = dicci[posicion_esp]
        x = var_posicion[0]
        y = var_posicion[1]
        tablero1[x][y] = who

        for z in tablero1:
            for m in tablero1[z]:
                print(m, end=" ")
            print()
        print()

    if a=='si':
        return tablero1


